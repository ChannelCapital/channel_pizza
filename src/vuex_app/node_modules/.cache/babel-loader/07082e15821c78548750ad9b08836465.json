{"remainingRequest":"/Users/nazlituncer/new_vue_app/vuex_app/node_modules/babel-loader/lib/index.js!/Users/nazlituncer/new_vue_app/vuex_app/node_modules/eslint-loader/index.js??ref--13-0!/Users/nazlituncer/new_vue_app/vuex_app/src/store/auth.js","dependencies":[{"path":"/Users/nazlituncer/new_vue_app/vuex_app/src/store/auth.js","mtime":1621017065823},{"path":"/Users/nazlituncer/new_vue_app/vuex_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nazlituncer/new_vue_app/vuex_app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nazlituncer/new_vue_app/vuex_app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXpsaXR1bmNlci9uZXdfdnVlX2FwcC92dWV4X2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIGlkOiBudWxsLAogICAgdXNlcjogbnVsbAogIH0sCiAgZ2V0dGVyczogewogICAgYXV0aGVudGljYXRlZDogZnVuY3Rpb24gYXV0aGVudGljYXRlZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuaWQ7CiAgICB9LAogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlcjsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX0lEOiBmdW5jdGlvbiBTRVRfSUQoc3RhdGUsIGlkKSB7CiAgICAgIHN0YXRlLmlkID0gaWQ7CiAgICB9LAogICAgU0VUX1VTRVI6IGZ1bmN0aW9uIFNFVF9VU0VSKHN0YXRlLCB1c2VybmFtZSkgewogICAgICBzdGF0ZS51c2VyID0gdXNlcm5hbWU7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBzaWduSW46IGZ1bmN0aW9uIHNpZ25JbihfcmVmLCBjcmVkZW50aWFscykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9tZXNzYWdlcy91c2VyJywgY3JlZGVudGlhbHMpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9VU0VSJywgcmVzcG9uc2UuZGF0YS51c2VybmFtZSk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX0lEJywgcmVzcG9uc2UuZGF0YS5pZCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9JRCcsIG51bGwpLCBjb21taXQoJ1NFVF9VU0VSJywgbnVsbCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjIsIGluZm9ybWF0aW9uKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9tZXNzYWdlcy9hZGRVc2VyJywgaW5mb3JtYXRpb24pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwoKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfVVNFUicsIHJlc3BvbnNlLmRhdGEudXNlcm5hbWUpOwogICAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9JRCcsIHJlc3BvbnNlLmRhdGEuaWQpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfSUQnLCBudWxsKSwgY29tbWl0KCdTRVRfVVNFUicsIG51bGwpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/nazlituncer/new_vue_app/vuex_app/src/store/auth.js"],"names":["axios","namespaced","state","id","user","getters","authenticated","mutations","SET_ID","SET_USER","username","actions","signIn","credentials","commit","post","response","data","register","information","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe;AACXC,EAAAA,UAAU,EAAC,IADA;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,EAAE,EAAE,IADD;AAEHC,IAAAA,IAAI,EAAC;AAFF,GAFI;AAOXC,EAAAA,OAAO,EAAE;AAELC,IAAAA,aAFK,yBAEUJ,KAFV,EAEiB;AAClB,aAAOA,KAAK,CAACC,EAAb;AACH,KAJI;AAMLC,IAAAA,IANK,gBAMCF,KAND,EAMQ;AACT,aAAOA,KAAK,CAACE,IAAb;AACH;AARI,GAPE;AAkBXG,EAAAA,SAAS,EAAE;AACPC,IAAAA,MADO,kBACAN,KADA,EACMC,EADN,EACU;AACbD,MAAAA,KAAK,CAACC,EAAN,GAAUA,EAAV;AACH,KAHM;AAIPM,IAAAA,QAJO,oBAIEP,KAJF,EAIQQ,QAJR,EAIiB;AACpBR,MAAAA,KAAK,CAACE,IAAN,GAAaM,QAAb;AACH;AANM,GAlBA;AA0BXC,EAAAA,OAAO,EAAE;AACCC,IAAAA,MADD,wBACmBC,WADnB,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtBC,gBAAAA,MAAsB,QAAtBA,MAAsB;AAAA;AAAA,uBAEZd,KAAK,CAACe,IAAN,CAAW,yCAAX,EAAsDF,WAAtD,CAFY;;AAAA;AAE7BG,gBAAAA,QAF6B;;AAGjC,oBAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA0B;AACtBH,kBAAAA,MAAM,CAAC,UAAD,EAAYE,QAAQ,CAACC,IAAT,CAAcP,QAA1B,CAAN;AACAI,kBAAAA,MAAM,CAAC,QAAD,EAAUE,QAAQ,CAACC,IAAT,CAAcd,EAAxB,CAAN;AACH,iBAHD,MAGO;AACHW,kBAAAA,MAAM,CAAC,QAAD,EAAU,IAAV,CAAN,EACAA,MAAM,CAAC,UAAD,EAAY,IAAZ,CADN;AAGH;;AAVgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhC,KAZA;AAaCI,IAAAA,QAbD,2BAaqBC,WAbrB,EAakC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtBL,gBAAAA,MAAsB,SAAtBA,MAAsB;AAAA;AAAA,uBACdd,KAAK,CAACe,IAAN,CAAW,4CAAX,EAAyDI,WAAzD,CADc;;AAAA;AAC/BH,gBAAAA,QAD+B;AAEnCI,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,oBAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA0B;AACtBH,kBAAAA,MAAM,CAAC,UAAD,EAAYE,QAAQ,CAACC,IAAT,CAAcP,QAA1B,CAAN;AACAI,kBAAAA,MAAM,CAAC,QAAD,EAAUE,QAAQ,CAACC,IAAT,CAAcd,EAAxB,CAAN;AACH,iBAHD,MAGO;AACHW,kBAAAA,MAAM,CAAC,QAAD,EAAU,IAAV,CAAN,EACAA,MAAM,CAAC,UAAD,EAAY,IAAZ,CADN;AAGH;;AAVkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYtC;AAzBI;AA1BE,CAAf","sourcesContent":["import axios from 'axios'\n\n\nexport default {\n    namespaced:true,\n    state: {\n        id: null,\n        user:null\n\n    },\n    getters: {\n\n        authenticated (state) {\n            return state.id\n        },\n\n        user (state) {\n            return state.user\n        }\n\n    },\n    mutations: {\n        SET_ID(state,id) {\n            state.id= id\n        },\n        SET_USER(state,username){\n            state.user = username\n        }\n    },\n    actions: {\n        async signIn ({commit}, credentials) {\n\n            let response = await axios.post('http://localhost:8080/api/messages/user', credentials)\n            if (response.data != null){\n                commit('SET_USER',response.data.username)\n                commit('SET_ID',response.data.id)\n            } else {\n                commit('SET_ID',null),\n                commit('SET_USER',null)\n\n            }\n            },  \n        async register ({commit}, information) {\n            let response = await axios.post('http://localhost:8080/api/messages/addUser', information)\n            console.log(response)\n            if (response.data != null){\n                commit('SET_USER',response.data.username)\n                commit('SET_ID',response.data.id)\n            } else {\n                commit('SET_ID',null),\n                commit('SET_USER',null)\n\n            }\n        \n        }\n        }\n    }\n"]}]}