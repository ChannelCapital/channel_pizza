{"remainingRequest":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/thread-loader/dist/cjs.js!/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/babel-loader/lib/index.js!/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/eslint-loader/index.js??ref--13-0!/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/src/store/actions.js","dependencies":[{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/src/store/actions.js","mtime":1622047795816},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/cache-loader/dist/cjs.js","mtime":1621596100752},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/thread-loader/dist/cjs.js","mtime":1621596104664},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/babel-loader/lib/index.js","mtime":1621596100288},{"path":"/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/node_modules/eslint-loader/index.js","mtime":1621596101830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXpsaXR1bmNlci9jaGFubmVfcGl6emEyL2NoYW5uZWxfcGl6emEvc3JjL3Z1ZXhfYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwovKioKICogQWN0aW9ucyBmaWxlIGZvciB2dWV4IHN0b3JlIGZvciBwcm9kdWN0cyBhbmQgY2FydCAKICpAbW9kdWxlCiAqIEBuYW1lIFZ1ZXggLSBBY3Rpb25zIAogKgogKgogKkB0eXBle29iamVjdH0KICpAYXV0aG9yIEVuaXMgU2luYW4gUmV5aGFuIDxlbmlzc2luYW5yZXloYW5AZ21haWwuY29tPgogKi8KCmV4cG9ydCB2YXIgZ2V0UHJvZHVjdHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvbWVzc2FnZXMvZmluZEFsbEl0ZW1zJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICBjb21taXQoJ1NFVF9QUk9EVUNUUycsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvZHVjdHMoX3gpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKLyoqCiAqIEdldHMgdGhlIHByb2R1Y3QgaWQgYW5kIG1ha2VzIGFuIGF4aW9zIGNhbGwgYW5kIGNvbW1pdHMgdGhlIHByb2R1Y3QgaW4gdnVleCBzdG9yZS4gCiAqCiAqIEBtZXRob2QgZ2V0UHJvZHVjdCA9IFNFVF9QUk9EVUNUCiAqIEBwYXJhbSB7U3RyaW5nfSBwcm9kdWN0SWQgLSBQcm9kdWN0IElkCiAqIEByZXR1cm5zIHt2b2lkfQogKi8KCmV4cG9ydCB2YXIgZ2V0UHJvZHVjdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihfcmVmMywgcHJvZHVjdElkKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvbWVzc2FnZXMvZmluZEl0ZW1CeUlkLycgKyBwcm9kdWN0SWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfUFJPRFVDVCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBnZXRQcm9kdWN0KF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKgogKiBUaGUgbWV0aG9kIGdldHMgcHJvZHVjdCBhbmQgcXVhbnRpdHkgYW5kIGZvcndhcmRzIHRoZSBpbmZvcm1hdGlvbiBmb3IgY29tbWl0IAogKiAKICogQG1ldGhvZCBhZGRQcm9kdWN0VG9DYXJ0ID0gQUREX1RPX0NBUlQKICogQHBhcmFtIHtvYmplY3R9IGNvbW1pdCAtIGNvbW1pdCBvYmplY3QgZm9yIHZ1ZXggc3RvcmUKICogQHBhcmFtIHtvYmplY3R9IHByb2R1Y3QgLSBBIGN1c3RvbSBvYmplY3Qgd2l0aCBxdWFudGl0eQogKiBAcmV0dXJucyB7dm9pZH0KICovCgpleHBvcnQgdmFyIGFkZFByb2R1Y3RUb0NhcnQgPSBmdW5jdGlvbiBhZGRQcm9kdWN0VG9DYXJ0KF9yZWY1LCBfcmVmNikgewogIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgdmFyIHByb2R1Y3QgPSBfcmVmNi5wcm9kdWN0LAogICAgICBxdWFudGl0eSA9IF9yZWY2LnF1YW50aXR5OwogIGNvbW1pdCgnQUREX1RPX0NBUlQnLCB7CiAgICBwcm9kdWN0OiBwcm9kdWN0LAogICAgcXVhbnRpdHk6IHF1YW50aXR5CiAgfSk7Cn07Ci8qKgogKiAKICogTWV0aG9kIG1ha2VzIGFuIGF4aW9zIGNhbGwgYW5kIHNlbmQgdGhlIG9yZGVyIGluZm9ybWF0aW9uIHRocm91Z2ggd2ViIHNlcnZpY2UgCiAqIAogKiBAbWV0aG9kIGFkZE9yZGVyID0gU0VUX09SREVSCiAqIEBwYXJhbSB7b2JqZWN0fSBjb21taXQgLSBjb21taXQgb2JqZWN0IGZvciB2dWV4IHN0b3JlCiAqIEBwYXJhbSB7b2JqZWN0fSBjYXJ0aW5mbyAtIGEgY3VzdG9tIG9iamVjdCBjb250YWluaW5nIGRldGFscyBvZiB0aGUgb3JkZXIKICogQHJldHVybnMge3ZvaWR9CiAqLwoKZXhwb3J0IHZhciBhZGRPcmRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY4ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmNywgY2FydGluZm8pIHsKICAgIHZhciBjb21taXQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvbWVzc2FnZXMvYWRkT3JkZXInLCBjYXJ0aW5mbykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICBjb21taXQoJ1NFVF9PUkRFUicsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGFkZE9yZGVyKF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKgogKgogKiBAbWV0aG9kIGNhcnRDbGVhciA9IENBUlRfQ0xFQVIKICpAcGFyYW0ge29iamVjdH0gY29tbWl0IC0gY2xlYXJzIHRoZSBjYXJ0IHdpdGggY2xlYXIgY29tbWl0IAogKkByZXR1cm5zIHt2b2lkfQogKi8KCmV4cG9ydCB2YXIgY2FydENsZWFyID0gZnVuY3Rpb24gY2FydENsZWFyKF9yZWY5KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICBjb21taXQoJ0NBUlRfQ0xFQVInKTsKfTs="},{"version":3,"sources":["/Users/nazlituncer/channe_pizza2/channel_pizza/src/vuex_app/src/store/actions.js"],"names":["axios","getProducts","commit","get","then","response","data","getProduct","productId","addProductToCart","product","quantity","addOrder","cartinfo","post","catch","error","console","log","cartClear"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,MAAhB,QAAgBA,MAAhB;AAAA;AAAA,mBACrBF,KAAK,CAACG,GAAN,CAAU,iDAAV,EACLC,IADK,CACA,UAAAC,QAAQ,EAAG;AACbH,cAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAA1B,CAAN;AACH,aAHK,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;AAMP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMM,UAAU;AAAA,sEAAG,yBAA0BC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBN,YAAAA,MAAjB,SAAiBA,MAAjB;AAAA;AAAA,mBACpBF,KAAK,CAACG,GAAN,CAAU,qDAAoDK,SAA9D,EAAyEJ,IAAzE,CAA8E,UAAAC,QAAQ,EAAI;AAC5FH,cAAAA,MAAM,CAAC,aAAD,EAAeG,QAAQ,CAACC,IAAxB,CAAN;AACH,aAFK,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVC,UAAU;AAAA;AAAA;AAAA,GAAhB;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,eAAwC;AAAA,MAA9BP,MAA8B,SAA9BA,MAA8B;AAAA,MAApBQ,OAAoB,SAApBA,OAAoB;AAAA,MAAXC,QAAW,SAAXA,QAAW;AACpET,EAAAA,MAAM,CAAC,aAAD,EAAe;AAACQ,IAAAA,OAAO,EAAPA,OAAD;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAf,CAAN;AAEH,CAHM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,QAAQ;AAAA,sEAAE,yBAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBX,YAAAA,MAAhB,SAAgBA,MAAhB;AAAA;AAAA,mBACbF,KAAK,CAACc,IAAN,CAAW,6CAAX,EAAyDD,QAAzD,EAAmET,IAAnE,CAAwE,UAAAC,QAAQ,EAAI;AAC1FH,cAAAA,MAAM,CAAC,WAAD,EAAaG,QAAQ,CAACC,IAAtB,CAAN;AACC,aAFK,EAEHS,KAFG,CAEG,UAACC,KAAD,EAAU;AAACC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,aAFjC,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;;AAAA,kBAARJ,QAAQ;AAAA;AAAA;AAAA,GAAd;AAMP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,QAAmB;AAAA,MAATjB,MAAS,SAATA,MAAS;AACxCA,EAAAA,MAAM,CAAC,YAAD,CAAN;AAEH,CAHM","sourcesContent":["import axios from \"axios\"\n/**\n * Actions file for vuex store for products and cart \n *@module\n * @name Vuex - Actions \n *\n *\n *@type{object}\n *@author Enis Sinan Reyhan <enissinanreyhan@gmail.com>\n */\n\nexport const getProducts = async function({commit}) {\nawait axios.get('http://localhost:8080/api/messages/findAllItems')\n.then(response =>{\n    commit('SET_PRODUCTS', response.data)\n})\n}\n/**\n * Gets the product id and makes an axios call and commits the product in vuex store. \n *\n * @method getProduct = SET_PRODUCT\n * @param {String} productId - Product Id\n * @returns {void}\n */\nexport const getProduct = async function ({commit}, productId ) {\nawait axios.get('http://localhost:8080/api/messages/findItemById/'+ productId).then(response => {\n    commit('SET_PRODUCT',response.data);\n})\n}\n/**\n * The method gets product and quantity and forwards the information for commit \n * \n * @method addProductToCart = ADD_TO_CART\n * @param {object} commit - commit object for vuex store\n * @param {object} product - A custom object with quantity\n * @returns {void}\n */\nexport const addProductToCart = function({commit}, {product, quantity}) {\n    commit('ADD_TO_CART',{product,quantity});\n\n}\n/**\n * \n * Method makes an axios call and send the order information through web service \n * \n * @method addOrder = SET_ORDER\n * @param {object} commit - commit object for vuex store\n * @param {object} cartinfo - a custom object containing detals of the order\n * @returns {void}\n */\nexport const addOrder= async function({commit}, cartinfo ) {\n    await axios.post('http://localhost:8080/api/messages/addOrder',cartinfo).then(response => {   \n    commit('SET_ORDER',response.data);\n    }).catch((error) =>{console.log(error)})\n    };\n\n/**\n *\n * @method cartClear = CART_CLEAR\n *@param {object} commit - clears the cart with clear commit \n *@returns {void}\n */\nexport const cartClear = function({commit}) {\n    commit('CART_CLEAR')\n\n}"]}]}