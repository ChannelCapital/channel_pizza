{"remainingRequest":"C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\src\\store\\actions.js","mtime":1623256631658},{"path":"C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\User\\channel_pizza2\\channel_pizza\\src\\vuex_app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1VzZXIvY2hhbm5lbF9waXp6YTIvY2hhbm5lbF9waXp6YS9zcmMvdnVleF9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7Ci8qKg0KICogQWN0aW9ucyBmaWxlIGZvciB2dWV4IHN0b3JlIGZvciBwcm9kdWN0cyBhbmQgY2FydCANCiAqQG1vZHVsZQ0KICogQG5hbWUgVnVleCAtIEFjdGlvbnMgDQogKg0KICoNCiAqQHR5cGV7b2JqZWN0fQ0KICpAYXV0aG9yIEVuaXMgU2luYW4gUmV5aGFuIDxlbmlzc2luYW5yZXloYW5AZ21haWwuY29tPg0KICovCgpleHBvcnQgdmFyIGdldFByb2R1Y3RzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIGNvbW1pdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lc3NhZ2VzL2ZpbmRBbGxJdGVtcycpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfUFJPRFVDVFMnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb2R1Y3RzKF94KSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKg0KICogR2V0cyB0aGUgcHJvZHVjdCBpZCBhbmQgbWFrZXMgYW4gYXhpb3MgY2FsbCBhbmQgY29tbWl0cyB0aGUgcHJvZHVjdCBpbiB2dWV4IHN0b3JlLiANCiAqDQogKiBAbWV0aG9kIGdldFByb2R1Y3QgPSBTRVRfUFJPRFVDVA0KICogQHBhcmFtIHtTdHJpbmd9IHByb2R1Y3RJZCAtIFByb2R1Y3QgSWQNCiAqIEByZXR1cm5zIHt2b2lkfQ0KICovCgpleHBvcnQgdmFyIGdldFByb2R1Y3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjMsIHByb2R1Y3RJZCkgewogICAgdmFyIGNvbW1pdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lc3NhZ2VzL2ZpbmRJdGVtQnlJZC8nICsgcHJvZHVjdElkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgIGNvbW1pdCgnU0VUX1BST0RVQ1QnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvZHVjdChfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwovKioNCiAqIFRoZSBtZXRob2QgZ2V0cyBwcm9kdWN0IGFuZCBxdWFudGl0eSBhbmQgZm9yd2FyZHMgdGhlIGluZm9ybWF0aW9uIGZvciBjb21taXQgDQogKiANCiAqIEBtZXRob2QgYWRkUHJvZHVjdFRvQ2FydCA9IEFERF9UT19DQVJUDQogKiBAcGFyYW0ge29iamVjdH0gY29tbWl0IC0gY29tbWl0IG9iamVjdCBmb3IgdnVleCBzdG9yZQ0KICogQHBhcmFtIHtvYmplY3R9IHByb2R1Y3QgLSBBIGN1c3RvbSBvYmplY3Qgd2l0aCBxdWFudGl0eQ0KICogQHJldHVybnMge3ZvaWR9DQogKi8KCmV4cG9ydCB2YXIgYWRkUHJvZHVjdFRvQ2FydCA9IGZ1bmN0aW9uIGFkZFByb2R1Y3RUb0NhcnQoX3JlZjUsIF9yZWY2KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICB2YXIgcHJvZHVjdCA9IF9yZWY2LnByb2R1Y3QsCiAgICAgIHF1YW50aXR5ID0gX3JlZjYucXVhbnRpdHk7CiAgY29tbWl0KCdBRERfVE9fQ0FSVCcsIHsKICAgIHByb2R1Y3Q6IHByb2R1Y3QsCiAgICBxdWFudGl0eTogcXVhbnRpdHkKICB9KTsKfTsKLyoqDQogKiANCiAqIE1ldGhvZCBtYWtlcyBhbiBheGlvcyBjYWxsIGFuZCBzZW5kIHRoZSBvcmRlciBpbmZvcm1hdGlvbiB0aHJvdWdoIHdlYiBzZXJ2aWNlIA0KICogDQogKiBAbWV0aG9kIGFkZE9yZGVyID0gU0VUX09SREVSDQogKiBAcGFyYW0ge29iamVjdH0gY29tbWl0IC0gY29tbWl0IG9iamVjdCBmb3IgdnVleCBzdG9yZQ0KICogQHBhcmFtIHtvYmplY3R9IGNhcnRpbmZvIC0gYSBjdXN0b20gb2JqZWN0IGNvbnRhaW5pbmcgZGV0YWxzIG9mIHRoZSBvcmRlcg0KICogQHJldHVybnMge3ZvaWR9DQogKi8KCmV4cG9ydCB2YXIgYWRkT3JkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmOCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoX3JlZjcsIGNhcnRpbmZvKSB7CiAgICB2YXIgY29tbWl0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZjcuY29tbWl0OwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lc3NhZ2VzL2FkZE9yZGVyJywgY2FydGluZm8pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfT1JERVInLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBhZGRPcmRlcihfeDQsIF94NSkgewogICAgcmV0dXJuIF9yZWY4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwovKioNCiAqDQogKiBAbWV0aG9kIGNhcnRDbGVhciA9IENBUlRfQ0xFQVINCiAqQHBhcmFtIHtvYmplY3R9IGNvbW1pdCAtIGNsZWFycyB0aGUgY2FydCB3aXRoIGNsZWFyIGNvbW1pdCANCiAqQHJldHVybnMge3ZvaWR9DQogKi8KCmV4cG9ydCB2YXIgY2FydENsZWFyID0gZnVuY3Rpb24gY2FydENsZWFyKF9yZWY5KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY5LmNvbW1pdDsKICBjb21taXQoJ0NBUlRfQ0xFQVInKTsKfTs="},{"version":3,"sources":["C:/Users/User/channel_pizza2/channel_pizza/src/vuex_app/src/store/actions.js"],"names":["axios","getProducts","commit","get","then","response","data","getProduct","productId","addProductToCart","product","quantity","addOrder","cartinfo","post","catch","error","console","log","cartClear"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,MAAhB,QAAgBA,MAAhB;AAAA;AAAA,mBACrBF,KAAK,CAACG,GAAN,CAAU,iDAAV,EACLC,IADK,CACA,UAAAC,QAAQ,EAAG;AACbH,cAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAA1B,CAAN;AACH,aAHK,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;AAMP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMM,UAAU;AAAA,sEAAG,yBAA0BC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBN,YAAAA,MAAjB,SAAiBA,MAAjB;AAAA;AAAA,mBACpBF,KAAK,CAACG,GAAN,CAAU,qDAAoDK,SAA9D,EAAyEJ,IAAzE,CAA8E,UAAAC,QAAQ,EAAI;AAC5FH,cAAAA,MAAM,CAAC,aAAD,EAAeG,QAAQ,CAACC,IAAxB,CAAN;AACH,aAFK,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVC,UAAU;AAAA;AAAA;AAAA,GAAhB;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,eAAwC;AAAA,MAA9BP,MAA8B,SAA9BA,MAA8B;AAAA,MAApBQ,OAAoB,SAApBA,OAAoB;AAAA,MAAXC,QAAW,SAAXA,QAAW;AACpET,EAAAA,MAAM,CAAC,aAAD,EAAe;AAACQ,IAAAA,OAAO,EAAPA,OAAD;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAf,CAAN;AAEH,CAHM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,QAAQ;AAAA,sEAAE,yBAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBX,YAAAA,MAAhB,SAAgBA,MAAhB;AAAA;AAAA,mBACbF,KAAK,CAACc,IAAN,CAAW,6CAAX,EAAyDD,QAAzD,EAAmET,IAAnE,CAAwE,UAAAC,QAAQ,EAAI;AAC1FH,cAAAA,MAAM,CAAC,WAAD,EAAaG,QAAQ,CAACC,IAAtB,CAAN;AACC,aAFK,EAEHS,KAFG,CAEG,UAACC,KAAD,EAAU;AAACC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,aAFjC,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;;AAAA,kBAARJ,QAAQ;AAAA;AAAA;AAAA,GAAd;AAMP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,QAAmB;AAAA,MAATjB,MAAS,SAATA,MAAS;AACxCA,EAAAA,MAAM,CAAC,YAAD,CAAN;AAEH,CAHM","sourcesContent":["import axios from \"axios\"\r\n/**\r\n * Actions file for vuex store for products and cart \r\n *@module\r\n * @name Vuex - Actions \r\n *\r\n *\r\n *@type{object}\r\n *@author Enis Sinan Reyhan <enissinanreyhan@gmail.com>\r\n */\r\n\r\nexport const getProducts = async function({commit}) {\r\nawait axios.get('http://localhost:8080/api/messages/findAllItems')\r\n.then(response =>{\r\n    commit('SET_PRODUCTS', response.data)\r\n})\r\n}\r\n/**\r\n * Gets the product id and makes an axios call and commits the product in vuex store. \r\n *\r\n * @method getProduct = SET_PRODUCT\r\n * @param {String} productId - Product Id\r\n * @returns {void}\r\n */\r\nexport const getProduct = async function ({commit}, productId ) {\r\nawait axios.get('http://localhost:8080/api/messages/findItemById/'+ productId).then(response => {\r\n    commit('SET_PRODUCT',response.data);\r\n})\r\n}\r\n/**\r\n * The method gets product and quantity and forwards the information for commit \r\n * \r\n * @method addProductToCart = ADD_TO_CART\r\n * @param {object} commit - commit object for vuex store\r\n * @param {object} product - A custom object with quantity\r\n * @returns {void}\r\n */\r\nexport const addProductToCart = function({commit}, {product, quantity}) {\r\n    commit('ADD_TO_CART',{product,quantity});\r\n\r\n}\r\n/**\r\n * \r\n * Method makes an axios call and send the order information through web service \r\n * \r\n * @method addOrder = SET_ORDER\r\n * @param {object} commit - commit object for vuex store\r\n * @param {object} cartinfo - a custom object containing detals of the order\r\n * @returns {void}\r\n */\r\nexport const addOrder= async function({commit}, cartinfo ) {\r\n    await axios.post('http://localhost:8080/api/messages/addOrder',cartinfo).then(response => {   \r\n    commit('SET_ORDER',response.data);\r\n    }).catch((error) =>{console.log(error)})\r\n    };\r\n\r\n/**\r\n *\r\n * @method cartClear = CART_CLEAR\r\n *@param {object} commit - clears the cart with clear commit \r\n *@returns {void}\r\n */\r\nexport const cartClear = function({commit}) {\r\n    commit('CART_CLEAR')\r\n\r\n}"]}]}